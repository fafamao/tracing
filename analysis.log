Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 10.43      7.81     7.81 592976461     0.00     0.00  Vec3::get_y() const
 10.24     15.48     7.67 122026510     0.00     0.00  sphere::hit(Ray const&, Interval&, hit_record&) const
  9.11     22.30     6.83 593890430     0.00     0.00  Vec3::get_x() const
  8.61     28.75     6.45 308397971     0.00     0.00  Vec3::length_squared() const
  8.43     35.06     6.32 561951317     0.00     0.00  Vec3::get_z() const
  7.04     40.34     5.27   247275     0.00     0.00  hittable_list::hit(Ray const&, Interval&, hit_record&) const
  4.93     44.02     3.69 128831114     0.00     0.00  operator-(Vec3 const&, Vec3 const&)
  4.15     47.13     3.11 290042809     0.00     0.00  Ray::get_direction() const
  3.81     49.99     2.85 131868712     0.00     0.00  Vec3::Vec3(double, double, double)
  3.79     52.83     2.83 128990492     0.00     0.00  bool __gnu_cxx::operator!=<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >(__gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > > const&)
  3.57     55.49     2.67 117668766     0.00     0.00  dot(Vec3 const&, Vec3 const&)
  3.18     57.88     2.38 310474427     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::base() const
  2.38     59.66     1.78 153384976     0.00     0.00  std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>::get() const
  2.26     61.34     1.69    10516     0.00     0.00  Vec3::operator-() const
  2.20     62.99     1.65 114929968     0.00     0.00  std::__shared_ptr_access<hittable, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  2.18     64.62     1.63 140240889     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::operator*() const
  2.09     66.19     1.56 153761436     0.00     0.00  Interval::Interval(double, double)
  2.01     67.69     1.50 138315242     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::operator++()
  1.90     69.11     1.42 123247619     0.00     0.00  std::__shared_ptr_access<hittable, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  1.16     69.98     0.86 153919338     0.00     0.00  Vec3::~Vec3()
  0.95     70.69     0.71   263406     0.00     0.00  Vec3::random(double, double)
  0.95     71.41     0.71 141917332     0.00     0.00  Ray::get_origin() const
  0.92     72.09     0.69   152939     0.00     0.00  unit_vector(Vec3 const&)
  0.48     72.45     0.36   311357     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.45     72.80     0.34     4175     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.43     73.12     0.33   122809     0.00     0.00  random_unit_vec_rejection_method()
  0.41     73.43     0.31   859451     0.00     0.00  operator*(double, Vec3 const&)
  0.41     73.74     0.31   486932     0.00     0.00  operator+(Vec3 const&, Vec3 const&)
  0.21     73.90     0.16   331371     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  0.17     74.03     0.12   969013     0.00     0.00  double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.11     74.11     0.09  2107833     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.08     74.17     0.06  2361088     0.00     0.00  std::uniform_real_distribution<double>::param_type::a() const
  0.07     74.22     0.05  1091131     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)
  0.07     74.27     0.05   863017     0.00     0.00  Color::Color(double, double, double)
  0.05     74.31     0.04   920653     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.05     74.35     0.04   136137     0.00     0.00  Color::Color()
  0.04     74.38     0.03   103506     0.00     0.00  record_content::record_content()
  0.04     74.41     0.03       22     0.00     3.40  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}::operator()() const
  0.03     74.44     0.03  1815801     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()
  0.03     74.46     0.03   943769     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
  0.03     74.48     0.03   269049     0.00     0.00  operator*(double, Color const&)
  0.03     74.50     0.02   933562     0.00     0.00  random_double()
  0.03     74.53     0.02   565916     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable> const*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::__normal_iterator(std::shared_ptr<hittable> const* const&)
  0.03     74.55     0.02   472677     0.00     0.00  hit_record::hit_record()
  0.03     74.56     0.02   294968     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::begin() const
  0.03     74.58     0.02   251328     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.03     74.61     0.02   145550     0.00     0.00  Camera::get_ray(int, int) const
  0.03     74.62     0.02   139885     0.00     0.00  Color::operator*=(Color const&)
  0.03     74.64     0.02   131095     0.00     0.00  Camera::ray_color(Ray const&, int, hittable_list const&)
  0.03     74.67     0.02    99069     0.00     0.00  Lambertian::scatter(Ray const&, record_content const&, Color&, Ray&) const
  0.03     74.69     0.02    20505     0.00     0.00  std::__atomic_base<int>::operator++(int)
  0.03     74.70     0.02                             _init
  0.02     74.72     0.01  1089489     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.01     74.73     0.01  1059685     0.00     0.00  Color::get_r() const
  0.01     74.74     0.01  1055663     0.00     0.00  Color::get_b() const
  0.01     74.75     0.01   484398     0.00     0.00  hit_record::~hit_record()
  0.01     74.76     0.01   447494     0.00     0.00  operator/(Vec3 const&, double)
  0.01     74.77     0.01   134212     0.00     0.00  Camera::sample_square() const
  0.01     74.78     0.01   126323     0.00     0.00  operator+(Color const&, Color const&)
  0.01     74.79     0.01   116312     0.00     0.00  record_content::~record_content()
  0.01     74.80     0.01    68141     0.00     0.00  std::_Function_base::_M_empty() const
  0.01     74.81     0.01    37236     0.00     0.00  std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.01     74.82     0.01    20936     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front()
  0.01     74.83     0.01    16817     0.00     0.00  std::enable_if<is_invocable_r_v<void, Camera::render(hittable_list const&, char*)::{lambda()#1}&>, void>::type std::__invoke_r<void, Camera::render(hittable_list const&, char*)::{lambda()#1}&>(Camera::render(hittable_list const&, char*)::{lambda()#1}&)
  0.01     74.84     0.01    16047     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1}::operator()() const
  0.01     74.85     0.01        1     0.01     0.01  std::uniform_real_distribution<double>::param_type::param_type(double, double)
  0.01     74.86     0.01  1895650     0.00     0.00  Vec3::Vec3()
  0.01     74.86     0.01  1202323     0.00     0.00  std::uniform_real_distribution<double>::param_type::b() const
  0.01     74.86     0.01   610371     0.00     0.00  random_double(double, double)
  0.01     74.87     0.01    15033     0.00     0.00  Color::operator*=(double)
  0.01     74.88     0.01    14467     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin()
  0.01     74.88     0.01    11098     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end()
  0.01     74.89     0.01        1     0.01     0.01  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<Metal>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.01     74.89     0.01        1     0.01     0.01  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine()
  0.00     74.89     0.00  1094658     0.00     0.00  Color::get_g() const
  0.00     74.89     0.00   645781     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00     74.89     0.00   588736     0.00     0.00  std::shared_ptr<Material>::shared_ptr()
  0.00     74.89     0.00   550059     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00     74.89     0.00   533897     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00   533120     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr()
  0.00     74.89     0.00   499850     0.00     0.00  Interval::surrounds(double) const
  0.00     74.89     0.00   495503     0.00     0.00  std::shared_ptr<Material>::~shared_ptr()
  0.00     74.89     0.00   409668     0.00     0.00  Ray::~Ray()
  0.00     74.89     0.00   339365     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::end() const
  0.00     74.89     0.00   295262     0.00     0.00  Ray::Ray(Vec3 const&, Vec3 const&)
  0.00     74.89     0.00   270262     0.00     0.00  std::shared_ptr<Material>::operator=(std::shared_ptr<Material> const&)
  0.00     74.89     0.00   255926     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00   211086     0.00     0.00  Color::operator+=(Color const&)
  0.00     74.89     0.00   153442     0.00     0.00  Vec3::get_length() const
  0.00     74.89     0.00   130677     0.00     0.00  Vec3::near_zero() const
  0.00     74.89     0.00   128626     0.00     0.00  hit_record::set_face_normal(Ray const&, Vec3 const&)
  0.00     74.89     0.00   123281     0.00     0.00  hit_record::operator=(hit_record const&)
  0.00     74.89     0.00   122906     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00     74.89     0.00   115502     0.00     0.00  Ray::at(double) const
  0.00     74.89     0.00   114242     0.00     0.00  Color::Color(Color const&)
  0.00     74.89     0.00   113369     0.00     0.00  std::__shared_ptr_access<Material, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00     74.89     0.00   110090     0.00     0.00  Ray::Ray()
  0.00     74.89     0.00   109785     0.00     0.00  std::__shared_ptr_access<Material, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.00     74.89     0.00    91952     0.00     0.00  std::function<void ()>::~function()
  0.00     74.89     0.00    74306     0.00     0.00  std::_Function_base::_Function_base()
  0.00     74.89     0.00    67942     0.00     0.00  std::_Any_data::_M_access()
  0.00     74.89     0.00    65997     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1}*& std::_Any_data::_M_access<Camera::render(hittable_list const&, char*)::{lambda()#1}*>()
  0.00     74.89     0.00    64127     0.00     0.00  std::_Function_base::~_Function_base()
  0.00     74.89     0.00    62003     0.00     0.00  std::function<void ()>&& std::forward<std::function<void ()> >(std::remove_reference<std::function<void ()> >::type&)
  0.00     74.89     0.00    61849     0.00     0.00  std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  0.00     74.89     0.00    61483     0.00     0.00  __gthread_active_p()
  0.00     74.89     0.00    56952     0.00     0.00  std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
  0.00     74.89     0.00    52715     0.00     0.00  std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.00     74.89     0.00    52515     0.00     0.00  std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
  0.00     74.89     0.00    47292     0.00     0.00  Interval::clamp(double) const
  0.00     74.89     0.00    45486     0.00     0.00  Color::linear_to_gamma(double)
  0.00     74.89     0.00    44155     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1}&& std::forward<Camera::render(hittable_list const&, char*)::{lambda()#1}>(std::remove_reference<Camera::render(hittable_list const&, char*)::{lambda()#1}>::type&)
  0.00     74.89     0.00    38389     0.00     0.00  std::function<void ()>::function(std::function<void ()>&&)
  0.00     74.89     0.00    37825     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1}& std::forward<Camera::render(hittable_list const&, char*)::{lambda()#1}&>(std::remove_reference<Camera::render(hittable_list const&, char*)::{lambda()#1}&>::type&)
  0.00     74.89     0.00    37623     0.00     0.00  std::_Function_handler<void (), Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00     74.89     0.00    36968     0.00     0.00  std::operator==(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00     74.89     0.00    36369     0.00     0.00  std::function<void ()>::operator bool() const
  0.00     74.89     0.00    36283     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const
  0.00     74.89     0.00    35598     0.00     0.00  std::_Any_data::_M_access() const
  0.00     74.89     0.00    35107     0.00     0.00  std::mutex* std::__addressof<std::mutex>(std::mutex&)
  0.00     74.89     0.00    34366     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00     74.89     0.00    33200     0.00     0.00  std::mutex::lock()
  0.00     74.89     0.00    32268     0.00     0.00  __gthread_mutex_lock(pthread_mutex_t*)
  0.00     74.89     0.00    32151     0.00     0.00  std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00     74.89     0.00    31100     0.00     0.00  std::unique_lock<std::mutex>::lock()
  0.00     74.89     0.00    30486     0.00     0.00  std::unique_lock<std::mutex>::~unique_lock()
  0.00     74.89     0.00    30383     0.00     0.00  std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
  0.00     74.89     0.00    29972     0.00     0.00  std::function<void ()>::function()
  0.00     74.89     0.00    29085     0.00     0.00  std::unique_lock<std::mutex>::unlock()
  0.00     74.89     0.00    28602     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const
  0.00     74.89     0.00    28338     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1}* const& std::_Any_data::_M_access<Camera::render(hittable_list const&, char*)::{lambda()#1}*>() const
  0.00     74.89     0.00    28100     0.00     0.00  __gthread_mutex_unlock(pthread_mutex_t*)
  0.00     74.89     0.00    27551     0.00     0.00  Camera::render(hittable_list const&, char*)::{lambda()#1} const& std::forward<Camera::render(hittable_list const&, char*)::{lambda()#1} const&>(std::remove_reference<Camera::render(hittable_list const&, char*)::{lambda()#1} const&>::type&)
  0.00     74.89     0.00    27464     0.00     0.00  std::unique_lock<std::mutex>::unique_lock(std::mutex&)
  0.00     74.89     0.00    27215     0.00     0.00  std::mutex::unlock()
  0.00     74.89     0.00    25809     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const
  0.00     74.89     0.00    23699     0.00     0.00  std::__atomic_base<int>::operator--(int)
  0.00     74.89     0.00    23680     0.00     0.00  void std::condition_variable::wait<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}::operator()() const::{lambda()#1})
  0.00     74.89     0.00    22717     0.00     0.00  std::function<void ()>::swap(std::function<void ()>&)
  0.00     74.89     0.00    22654     0.00     0.00  ThreadPool::wait_all()::{lambda()#1}::operator()() const
  0.00     74.89     0.00    22354     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
  0.00     74.89     0.00    21472     0.00     0.00  void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*)
  0.00     74.89     0.00    21278     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator()
  0.00     74.89     0.00    18394     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front()
  0.00     74.89     0.00    17743     0.00     0.00  std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<std::function<void ()> >(std::function<void ()>&&)
  0.00     74.89     0.00    17650     0.00     0.00  std::_Function_handler<void (), Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
  0.00     74.89     0.00    16805     0.00     0.00  void std::__invoke_impl<void, Camera::render(hittable_list const&, char*)::{lambda()#1}&>(std::__invoke_other, Camera::render(hittable_list const&, char*)::{lambda()#1}&)
  0.00     74.89     0.00    16716     0.00     0.00  operator new(unsigned long, void*)
  0.00     74.89     0.00    16225     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front()
  0.00     74.89     0.00    15680     0.00     0.00  std::function<void ()>::operator()() const
  0.00     74.89     0.00    15560     0.00     0.00  std::function<void ()>::operator=(std::function<void ()>&&)
  0.00     74.89     0.00    15429     0.00     0.00  std::function<void ()>::function<Camera::render(hittable_list const&, char*)::{lambda()#1}, void>(Camera::render(hittable_list const&, char*)::{lambda()#1}&&)
  0.00     74.89     0.00    15059     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
  0.00     74.89     0.00    15020     0.00     0.00  bool std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_not_empty_function<Camera::render(hittable_list const&, char*)::{lambda()#1}>(Camera::render(hittable_list const&, char*)::{lambda()#1} const&)
  0.00     74.89     0.00    14765     0.00     0.00  void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*, std::function<void ()>&&)
  0.00     74.89     0.00    14722     0.00     0.00  Color::write_color(int, int, char*)
  0.00     74.89     0.00    14685     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop()
  0.00     74.89     0.00    14315     0.00     0.00  void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*)
  0.00     74.89     0.00    14217     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.00     74.89     0.00    13967     0.00     0.00  void std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_init_functor<Camera::render(hittable_list const&, char*)::{lambda()#1}>(std::_Any_data&, Camera::render(hittable_list const&, char*)::{lambda()#1}&&)
  0.00     74.89     0.00    13079     0.00     0.00  void __gnu_cxx::new_allocator<std::function<void ()> >::construct<std::function<void ()>, std::function<void ()> >(std::function<void ()>*, std::function<void ()>&&)
  0.00     74.89     0.00    12968     0.00     0.00  void std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_init_functor<Camera::render(hittable_list const&, char*)::{lambda()#1} const&>(std::_Any_data&, Camera::render(hittable_list const&, char*)::{lambda()#1} const&)
  0.00     74.89     0.00    12376     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}::operator()() const::{lambda()#1}::operator()() const
  0.00     74.89     0.00    12145     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--()
  0.00     74.89     0.00    11414     0.00     0.00  decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<std::function<void ()> >(std::function<void ()>&&)
  0.00     74.89     0.00    11030     0.00     0.00  void std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_create<Camera::render(hittable_list const&, char*)::{lambda()#1}>(std::_Any_data&, Camera::render(hittable_list const&, char*)::{lambda()#1}&&, std::integral_constant<bool, false>)
  0.00     74.89     0.00    10643     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back()
  0.00     74.89     0.00    10290     0.00     0.00  ThreadPool::enqueue(std::function<void ()>)
  0.00     74.89     0.00    10113     0.00     0.00  void std::_Function_base::_Base_manager<Camera::render(hittable_list const&, char*)::{lambda()#1}>::_M_create<Camera::render(hittable_list const&, char*)::{lambda()#1} const&>(std::_Any_data&, Camera::render(hittable_list const&, char*)::{lambda()#1} const&, std::integral_constant<bool, false>)
  0.00     74.89     0.00     9770     0.00     0.00  std::function<void ()>::function(std::function<void ()> const&)
  0.00     74.89     0.00     9633     0.00     0.00  Metal::scatter(Ray const&, record_content const&, Color&, Ray&) const
  0.00     74.89     0.00     9361     0.00     0.00  reflect(Vec3 const&, Vec3 const&)
  0.00     74.89     0.00     6736     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00     74.89     0.00     5299     0.00     0.00  dielectric::scatter(Ray const&, record_content const&, Color&, Ray&) const
  0.00     74.89     0.00     4836     0.00     0.00  dielectric::reflectance(double, double)
  0.00     74.89     0.00     4425     0.00     0.00  __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int)
  0.00     74.89     0.00     4380     0.00     0.00  refract(Vec3 const&, Vec3 const&, double)
  0.00     74.89     0.00     4104     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.00     74.89     0.00     3856     0.00     0.00  Vec3& std::forward<Vec3&>(std::remove_reference<Vec3&>::type&)
  0.00     74.89     0.00     3856     0.00     0.00  std::shared_ptr<Material>& std::forward<std::shared_ptr<Material>&>(std::remove_reference<std::shared_ptr<Material>&>::type&)
  0.00     74.89     0.00     3648     0.00     0.00  Color& std::forward<Color&>(std::remove_reference<Color&>::type&)
  0.00     74.89     0.00     3593     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size()
  0.00     74.89     0.00     3415     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**)
  0.00     74.89     0.00     2146     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::_M_max_size() const
  0.00     74.89     0.00     2019     0.00     0.00  std::shared_ptr<hittable>* std::__addressof<std::shared_ptr<hittable> >(std::shared_ptr<hittable>&)
  0.00     74.89     0.00     1961     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.00     74.89     0.00     1944     0.00     0.00  __gnu_cxx::new_allocator<sphere>::~new_allocator()
  0.00     74.89     0.00     1944     0.00     0.00  std::allocator<sphere>::~allocator()
  0.00     74.89     0.00     1528     0.00     0.00  __gnu_cxx::new_allocator<Lambertian>::~new_allocator()
  0.00     74.89     0.00     1528     0.00     0.00  std::allocator<Lambertian>::~allocator()
  0.00     74.89     0.00     1483     0.00     0.00  std::shared_ptr<hittable>::~shared_ptr()
  0.00     74.89     0.00     1483     0.00     0.00  std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00     1458     0.00     0.00  __gnu_cxx::__aligned_buffer<sphere>::_M_ptr()
  0.00     74.89     0.00     1458     0.00     0.00  __gnu_cxx::__aligned_buffer<sphere>::_M_addr()
  0.00     74.89     0.00     1458     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00     1458     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00     74.89     0.00     1457     0.00     0.00  __gnu_cxx::new_allocator<sphere>::new_allocator(__gnu_cxx::new_allocator<sphere> const&)
  0.00     74.89     0.00     1456     0.00     0.00  std::allocator<sphere>::allocator(std::allocator<sphere> const&)
  0.00     74.89     0.00     1446     0.00     0.00  std::remove_reference<Material*&>::type&& std::move<Material*&>(Material*&)
  0.00     74.89     0.00     1204     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux()
  0.00     74.89     0.00     1146     0.00     0.00  __gnu_cxx::new_allocator<Lambertian>::new_allocator(__gnu_cxx::new_allocator<Lambertian> const&)
  0.00     74.89     0.00     1146     0.00     0.00  __gnu_cxx::__aligned_buffer<Lambertian>::_M_ptr()
  0.00     74.89     0.00     1146     0.00     0.00  __gnu_cxx::__aligned_buffer<Lambertian>::_M_addr()
  0.00     74.89     0.00     1146     0.00     0.00  std::allocator<Lambertian>::allocator(std::allocator<Lambertian> const&)
  0.00     74.89     0.00     1146     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00     74.89     0.00     1047     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long)
  0.00     74.89     0.00     1023     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*)
  0.00     74.89     0.00     1022     0.00     0.00  std::remove_reference<std::shared_ptr<hittable>&>::type&& std::move<std::shared_ptr<hittable>&>(std::shared_ptr<hittable>&)
  0.00     74.89     0.00     1022     0.00     0.00  std::shared_ptr<hittable>&& std::forward<std::shared_ptr<hittable> >(std::remove_reference<std::shared_ptr<hittable> >::type&)
  0.00     74.89     0.00      982     0.00     0.00  std::shared_ptr<hittable> const& std::forward<std::shared_ptr<hittable> const&>(std::remove_reference<std::shared_ptr<hittable> const&>::type&)
  0.00     74.89     0.00      972     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00     74.89     0.00      972     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00     74.89     0.00      972     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::allocator<sphere>(std::allocator<sphere> const&)
  0.00     74.89     0.00      972     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00     74.89     0.00      972     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<sphere>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<sphere>, true>&)
  0.00     74.89     0.00      972     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00     74.89     0.00      972     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.00     74.89     0.00      972     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00     74.89     0.00      971     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00      971     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00     74.89     0.00      971     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00      968     0.00     0.00  std::shared_ptr<Material>::shared_ptr(std::shared_ptr<Material> const&)
  0.00     74.89     0.00      968     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00      961     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const
  0.00     74.89     0.00      953     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node()
  0.00     74.89     0.00      952     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const
  0.00     74.89     0.00      944     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long)
  0.00     74.89     0.00      940     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     74.89     0.00      871     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&)
  0.00     74.89     0.00      852     0.00     0.00  std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00     74.89     0.00      828     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long)
  0.00     74.89     0.00      819     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00      803     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::max_size() const
  0.00     74.89     0.00      764     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00     74.89     0.00      764     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00     74.89     0.00      764     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::allocator<Lambertian>(std::allocator<Lambertian> const&)
  0.00     74.89     0.00      764     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00     74.89     0.00      764     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Lambertian>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Lambertian>, true>&)
  0.00     74.89     0.00      764     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00      764     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00     74.89     0.00      764     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00     74.89     0.00      764     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00      760     0.00     0.00  Color::random_color()
  0.00     74.89     0.00      733     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long)
  0.00     74.89     0.00      700     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::max_size(std::allocator<std::function<void ()> > const&)
  0.00     74.89     0.00      696     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const
  0.00     74.89     0.00      684     0.00     0.00  void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<std::function<void ()> >(std::function<void ()>&&)
  0.00     74.89     0.00      624     0.00     0.00  std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     74.89     0.00      624     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  0.00     74.89     0.00      623     0.00     0.00  std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     74.89     0.00      623     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  0.00     74.89     0.00      608     0.00     0.00  double& std::forward<double&>(std::remove_reference<double&>::type&)
  0.00     74.89     0.00      511     0.00     0.00  void __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::destroy<std::shared_ptr<hittable> >(std::shared_ptr<hittable>*)
  0.00     74.89     0.00      511     0.00     0.00  void __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::construct<std::shared_ptr<hittable>, std::shared_ptr<hittable> >(std::shared_ptr<hittable>*, std::shared_ptr<hittable>&&)
  0.00     74.89     0.00      511     0.00     0.00  std::shared_ptr<hittable>::shared_ptr(std::shared_ptr<hittable>&&)
  0.00     74.89     0.00      511     0.00     0.00  std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00      511     0.00     0.00  void std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::destroy<std::shared_ptr<hittable> >(std::allocator<std::shared_ptr<hittable> >&, std::shared_ptr<hittable>*)
  0.00     74.89     0.00      511     0.00     0.00  void std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::construct<std::shared_ptr<hittable>, std::shared_ptr<hittable> >(std::allocator<std::shared_ptr<hittable> >&, std::shared_ptr<hittable>*, std::shared_ptr<hittable>&&)
  0.00     74.89     0.00      511     0.00     0.00  void std::__relocate_object_a<std::shared_ptr<hittable>, std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&)
  0.00     74.89     0.00      487     0.00     0.00  hittable::hittable()
  0.00     74.89     0.00      487     0.00     0.00  hittable::~hittable()
  0.00     74.89     0.00      486     0.00     0.00  hittable_list::add(std::shared_ptr<hittable>)
  0.00     74.89     0.00      486     0.00     0.00  sphere::sphere(Vec3 const&, double, std::shared_ptr<Material>)
  0.00     74.89     0.00      486     0.00     0.00  sphere::~sphere()
  0.00     74.89     0.00      486     0.00     0.00  Material::Material()
  0.00     74.89     0.00      486     0.00     0.00  Material::~Material()
  0.00     74.89     0.00      486     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::destroy<sphere>(sphere*)
  0.00     74.89     0.00      486     0.00     0.00  __gnu_cxx::new_allocator<sphere>::new_allocator()
  0.00     74.89     0.00      486     0.00     0.00  void __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::construct<std::shared_ptr<hittable>, std::shared_ptr<hittable> const&>(std::shared_ptr<hittable>*, std::shared_ptr<hittable> const&)
  0.00     74.89     0.00      486     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00      486     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00      486     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00     74.89     0.00      486     0.00     0.00  std::allocator<sphere>::allocator()
  0.00     74.89     0.00      486     0.00     0.00  std::shared_ptr<sphere>::~shared_ptr()
  0.00     74.89     0.00      486     0.00     0.00  std::shared_ptr<hittable>::shared_ptr<sphere, void>(std::shared_ptr<sphere>&&)
  0.00     74.89     0.00      486     0.00     0.00  std::shared_ptr<hittable>::shared_ptr(std::shared_ptr<hittable> const&)
  0.00     74.89     0.00      486     0.00     0.00  std::enable_if<!std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<sphere, void>::value, void>::type std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<sphere, sphere>(sphere*)
  0.00     74.89     0.00      486     0.00     0.00  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00      486     0.00     0.00  std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00      486     0.00     0.00  std::__shared_ptr<hittable, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<sphere, void>(std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<sphere>, true>::_Sp_ebo_helper(std::allocator<sphere> const&)
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<sphere>, true>::~_Sp_ebo_helper()
  0.00     74.89     0.00      486     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00     74.89     0.00      486     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::destroy<sphere>(std::allocator<sphere>&, sphere*)
  0.00     74.89     0.00      486     0.00     0.00  void std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::construct<std::shared_ptr<hittable>, std::shared_ptr<hittable> const&>(std::allocator<std::shared_ptr<hittable> >&, std::shared_ptr<hittable>*, std::shared_ptr<hittable> const&)
  0.00     74.89     0.00      486     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00      486     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<sphere>)
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00     74.89     0.00      486     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00     74.89     0.00      486     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::push_back(std::shared_ptr<hittable> const&)
  0.00     74.89     0.00      486     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00      486     0.00     0.00  __gnu_cxx::__promote_2<int, double, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type>::__type std::fmax<int, double>(int, double)
  0.00     74.89     0.00      486     0.00     0.00  std::remove_reference<std::shared_ptr<sphere>&>::type&& std::move<std::shared_ptr<sphere>&>(std::shared_ptr<sphere>&)
  0.00     74.89     0.00      486     0.00     0.00  void std::_Destroy<std::shared_ptr<hittable> >(std::shared_ptr<hittable>*)
  0.00     74.89     0.00      485     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00     74.89     0.00      485     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00      482     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::construct<sphere, Vec3&, double, std::shared_ptr<Material>&>(sphere*, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::shared_ptr<sphere>::shared_ptr<std::allocator<sphere>, Vec3&, double, std::shared_ptr<Material>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<sphere>, Vec3&, double, std::shared_ptr<Material>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&)
  0.00     74.89     0.00      482     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<sphere, std::allocator<sphere>, Vec3&, double, std::shared_ptr<Material>&>(sphere*&, std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::construct<sphere, Vec3&, double, std::shared_ptr<Material>&>(std::allocator<sphere>&, sphere*, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Vec3&, double, std::shared_ptr<Material>&>(std::allocator<sphere>, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::shared_ptr<sphere> std::make_shared<sphere, Vec3&, double, std::shared_ptr<Material>&>(Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::shared_ptr<sphere> std::allocate_shared<sphere, std::allocator<sphere>, Vec3&, double, std::shared_ptr<Material>&>(std::allocator<sphere> const&, Vec3&, double&&, std::shared_ptr<Material>&)
  0.00     74.89     0.00      482     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Material*> >, std::is_move_constructible<Material*>, std::is_move_assignable<Material*> >::value, void>::type std::swap<Material*>(Material*&, Material*&)
  0.00     74.89     0.00      382     0.00     0.00  Lambertian::Lambertian(Color const&)
  0.00     74.89     0.00      382     0.00     0.00  Lambertian::~Lambertian()
  0.00     74.89     0.00      382     0.00     0.00  void __gnu_cxx::new_allocator<Lambertian>::destroy<Lambertian>(Lambertian*)
  0.00     74.89     0.00      382     0.00     0.00  __gnu_cxx::new_allocator<Lambertian>::new_allocator()
  0.00     74.89     0.00      382     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00      382     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00      382     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00     74.89     0.00      382     0.00     0.00  std::allocator<Lambertian>::allocator()
  0.00     74.89     0.00      382     0.00     0.00  std::shared_ptr<Lambertian>::~shared_ptr()
  0.00     74.89     0.00      382     0.00     0.00  std::enable_if<!std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<Lambertian, void>::value, void>::type std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<Lambertian, Lambertian>(Lambertian*)
  0.00     74.89     0.00      382     0.00     0.00  std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Lambertian>, true>::_Sp_ebo_helper(std::allocator<Lambertian> const&)
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Lambertian>, true>::~_Sp_ebo_helper()
  0.00     74.89     0.00      382     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00     74.89     0.00      382     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00     74.89     0.00      382     0.00     0.00  void std::allocator_traits<std::allocator<Lambertian> >::destroy<Lambertian>(std::allocator<Lambertian>&, Lambertian*)
  0.00     74.89     0.00      382     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00      382     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Lambertian>)
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00     74.89     0.00      382     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00      382     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00      380     0.00     0.00  void __gnu_cxx::new_allocator<Lambertian>::construct<Lambertian, Color&>(Lambertian*, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::shared_ptr<Lambertian>::shared_ptr<std::allocator<Lambertian>, Color&>(std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::enable_if<std::is_assignable<std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&, std::shared_ptr<Lambertian> >::value, std::shared_ptr<Material>&>::type std::shared_ptr<Material>::operator=<Lambertian>(std::shared_ptr<Lambertian>&&)
  0.00     74.89     0.00      380     0.00     0.00  std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Lambertian>, Color&>(std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Lambertian, void>(std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00      380     0.00     0.00  std::enable_if<std::__sp_compatible_with<Lambertian*, Material*>::value, std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&>::type std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::operator=<Lambertian>(std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00      380     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Lambertian, std::allocator<Lambertian>, Color&>(Lambertian*&, std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&)
  0.00     74.89     0.00      380     0.00     0.00  void std::allocator_traits<std::allocator<Lambertian> >::construct<Lambertian, Color&>(std::allocator<Lambertian>&, Lambertian*, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Color&>(std::allocator<Lambertian>, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::shared_ptr<Lambertian> std::make_shared<Lambertian, Color&>(Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::shared_ptr<Lambertian> std::allocate_shared<Lambertian, std::allocator<Lambertian>, Color&>(std::allocator<Lambertian> const&, Color&)
  0.00     74.89     0.00      380     0.00     0.00  std::remove_reference<std::shared_ptr<Lambertian>&>::type&& std::move<std::shared_ptr<Lambertian>&>(std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00      380     0.00     0.00  std::remove_reference<std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>&)
  0.00     74.89     0.00      308     0.00     0.00  __gnu_cxx::new_allocator<Metal>::~new_allocator()
  0.00     74.89     0.00      308     0.00     0.00  std::allocator<Metal>::~allocator()
  0.00     74.89     0.00      270     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&& std::forward<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::remove_reference<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>::type&)
  0.00     74.89     0.00      231     0.00     0.00  __gnu_cxx::new_allocator<Metal>::new_allocator(__gnu_cxx::new_allocator<Metal> const&)
  0.00     74.89     0.00      231     0.00     0.00  __gnu_cxx::__aligned_buffer<Metal>::_M_ptr()
  0.00     74.89     0.00      231     0.00     0.00  __gnu_cxx::__aligned_buffer<Metal>::_M_addr()
  0.00     74.89     0.00      231     0.00     0.00  std::allocator<Metal>::allocator(std::allocator<Metal> const&)
  0.00     74.89     0.00      231     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00     74.89     0.00      154     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00     74.89     0.00      154     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00     74.89     0.00      154     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::allocator<Metal>(std::allocator<Metal> const&)
  0.00     74.89     0.00      154     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00     74.89     0.00      154     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Metal>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Metal>, true>&)
  0.00     74.89     0.00      154     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00      154     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00     74.89     0.00      154     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00     74.89     0.00      154     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00      151     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::count() const
  0.00     74.89     0.00      112     0.00     0.00  std::thread* std::__addressof<std::thread>(std::thread&)
  0.00     74.89     0.00      110     0.00     0.00  std::thread::id::id()
  0.00     74.89     0.00      108     0.00     0.00  __gnu_cxx::new_allocator<dielectric>::~new_allocator()
  0.00     74.89     0.00      108     0.00     0.00  std::allocator<dielectric>::~allocator()
  0.00     74.89     0.00       90     0.00     0.00  std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)
  0.00     74.89     0.00       81     0.00     0.00  __gnu_cxx::new_allocator<dielectric>::new_allocator(__gnu_cxx::new_allocator<dielectric> const&)
  0.00     74.89     0.00       81     0.00     0.00  __gnu_cxx::__aligned_buffer<dielectric>::_M_ptr()
  0.00     74.89     0.00       81     0.00     0.00  __gnu_cxx::__aligned_buffer<dielectric>::_M_addr()
  0.00     74.89     0.00       81     0.00     0.00  std::allocator<dielectric>::allocator(std::allocator<dielectric> const&)
  0.00     74.89     0.00       81     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00     74.89     0.00       77     0.00     0.00  Metal::Metal(Color const&, double)
  0.00     74.89     0.00       77     0.00     0.00  Metal::~Metal()
  0.00     74.89     0.00       77     0.00     0.00  void __gnu_cxx::new_allocator<Metal>::destroy<Metal>(Metal*)
  0.00     74.89     0.00       77     0.00     0.00  __gnu_cxx::new_allocator<Metal>::new_allocator()
  0.00     74.89     0.00       77     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00       77     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00       77     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00     74.89     0.00       77     0.00     0.00  std::allocator<Metal>::allocator()
  0.00     74.89     0.00       77     0.00     0.00  std::shared_ptr<Metal>::~shared_ptr()
  0.00     74.89     0.00       77     0.00     0.00  std::enable_if<!std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<Metal, void>::value, void>::type std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<Metal, Metal>(Metal*)
  0.00     74.89     0.00       77     0.00     0.00  std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Metal>, true>::_Sp_ebo_helper(std::allocator<Metal> const&)
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Metal>, true>::~_Sp_ebo_helper()
  0.00     74.89     0.00       77     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00     74.89     0.00       77     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00     74.89     0.00       77     0.00     0.00  void std::allocator_traits<std::allocator<Metal> >::destroy<Metal>(std::allocator<Metal>&, Metal*)
  0.00     74.89     0.00       77     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00       77     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Metal>)
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00     74.89     0.00       77     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00       77     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00       76     0.00     0.00  Color::random_color(double, double)
  0.00     74.89     0.00       76     0.00     0.00  void __gnu_cxx::new_allocator<Metal>::construct<Metal, Color&, double&>(Metal*, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::shared_ptr<Metal>::shared_ptr<std::allocator<Metal>, Color&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::enable_if<std::is_assignable<std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&, std::shared_ptr<Metal> >::value, std::shared_ptr<Material>&>::type std::shared_ptr<Material>::operator=<Metal>(std::shared_ptr<Metal>&&)
  0.00     74.89     0.00       76     0.00     0.00  std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Metal>, Color&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Metal, void>(std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00       76     0.00     0.00  std::enable_if<std::__sp_compatible_with<Metal*, Material*>::value, std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&>::type std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::operator=<Metal>(std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00       76     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Metal, std::allocator<Metal>, Color&, double&>(Metal*&, std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  void std::allocator_traits<std::allocator<Metal> >::construct<Metal, Color&, double&>(std::allocator<Metal>&, Metal*, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Color&, double&>(std::allocator<Metal>, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::shared_ptr<Metal> std::make_shared<Metal, Color&, double&>(Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::shared_ptr<Metal> std::allocate_shared<Metal, std::allocator<Metal>, Color&, double&>(std::allocator<Metal> const&, Color&, double&)
  0.00     74.89     0.00       76     0.00     0.00  std::remove_reference<std::shared_ptr<Metal>&>::type&& std::move<std::shared_ptr<Metal>&>(std::shared_ptr<Metal>&)
  0.00     74.89     0.00       76     0.00     0.00  std::remove_reference<std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>&)
  0.00     74.89     0.00       71     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const
  0.00     74.89     0.00       60     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&)
  0.00     74.89     0.00       60     0.00     0.00  std::shared_ptr<hittable>* std::__niter_base<std::shared_ptr<hittable>*>(std::shared_ptr<hittable>*)
  0.00     74.89     0.00       58     0.00     0.00  std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&)
  0.00     74.89     0.00       57     0.00     0.00  std::thread::joinable() const
  0.00     74.89     0.00       57     0.00     0.00  std::operator==(std::thread::id, std::thread::id)
  0.00     74.89     0.00       55     0.00     0.00  std::thread::~thread()
  0.00     74.89     0.00       54     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00     74.89     0.00       54     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00     74.89     0.00       54     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::allocator<dielectric>(std::allocator<dielectric> const&)
  0.00     74.89     0.00       54     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00     74.89     0.00       54     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<dielectric>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<dielectric>, true>&)
  0.00     74.89     0.00       54     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00       54     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00     74.89     0.00       54     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00     74.89     0.00       54     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00       52     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)
  0.00     74.89     0.00       48     0.00     0.00  std::__atomic_base<int>::operator int() const
  0.00     74.89     0.00       47     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr()
  0.00     74.89     0.00       47     0.00     0.00  std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00     74.89     0.00       47     0.00     0.00  std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00     74.89     0.00       46     0.00     0.00  std::_Head_base<0ul, std::thread::_State*, false>::_M_head(std::_Head_base<0ul, std::thread::_State*, false>&)
  0.00     74.89     0.00       46     0.00     0.00  std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00     74.89     0.00       45     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const
  0.00     74.89     0.00       44     0.00     0.00  std::operator&(std::memory_order, std::__memory_order_modifier)
  0.00     74.89     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::base() const
  0.00     74.89     0.00       40     0.00     0.00  std::atomic<bool>::operator bool() const
  0.00     74.89     0.00       40     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::size() const
  0.00     74.89     0.00       33     0.00     0.00  std::thread* std::__niter_base<std::thread*>(std::thread*)
  0.00     74.89     0.00       32     0.00     0.00  Vec3&& std::forward<Vec3>(std::remove_reference<Vec3>::type&)
  0.00     74.89     0.00       31     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&)
  0.00     74.89     0.00       31     0.00     0.00  bool std::chrono::operator<=<long, std::ratio<1l, 1l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       30     0.00     0.00  void __gnu_cxx::new_allocator<std::thread>::destroy<std::thread>(std::thread*)
  0.00     74.89     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::_M_max_size() const
  0.00     74.89     0.00       30     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*)
  0.00     74.89     0.00       30     0.00     0.00  std::thread::swap(std::thread&)
  0.00     74.89     0.00       30     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::end()
  0.00     74.89     0.00       30     0.00     0.00  void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00     74.89     0.00       30     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  0.00     74.89     0.00       29     0.00     0.00  void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, std::thread>(std::thread*, std::thread&&)
  0.00     74.89     0.00       29     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&)
  0.00     74.89     0.00       29     0.00     0.00  std::thread::thread(std::thread&&)
  0.00     74.89     0.00       29     0.00     0.00  std::remove_reference<std::thread&>::type&& std::move<std::thread&>(std::thread&)
  0.00     74.89     0.00       28     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::size() const
  0.00     74.89     0.00       27     0.00     0.00  dielectric::dielectric(double)
  0.00     74.89     0.00       27     0.00     0.00  dielectric::~dielectric()
  0.00     74.89     0.00       27     0.00     0.00  void __gnu_cxx::new_allocator<dielectric>::destroy<dielectric>(dielectric*)
  0.00     74.89     0.00       27     0.00     0.00  void __gnu_cxx::new_allocator<dielectric>::construct<dielectric, double>(dielectric*, double&&)
  0.00     74.89     0.00       27     0.00     0.00  __gnu_cxx::new_allocator<dielectric>::new_allocator()
  0.00     74.89     0.00       27     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00       27     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00       27     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00     74.89     0.00       27     0.00     0.00  std::allocator<dielectric>::allocator()
  0.00     74.89     0.00       27     0.00     0.00  std::shared_ptr<dielectric>::shared_ptr<std::allocator<dielectric>, double>(std::_Sp_alloc_shared_tag<std::allocator<dielectric> >, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::shared_ptr<dielectric>::~shared_ptr()
  0.00     74.89     0.00       27     0.00     0.00  std::enable_if<!std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<dielectric, void>::value, void>::type std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<dielectric, dielectric>(dielectric*)
  0.00     74.89     0.00       27     0.00     0.00  std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<dielectric>, double>(std::_Sp_alloc_shared_tag<std::allocator<dielectric> >, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<dielectric>, true>::_Sp_ebo_helper(std::allocator<dielectric> const&)
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<dielectric>, true>::~_Sp_ebo_helper()
  0.00     74.89     0.00       27     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<dielectric, std::allocator<dielectric>, double>(dielectric*&, std::_Sp_alloc_shared_tag<std::allocator<dielectric> >, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00     74.89     0.00       27     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00     74.89     0.00       27     0.00     0.00  void std::allocator_traits<std::allocator<dielectric> >::destroy<dielectric>(std::allocator<dielectric>&, dielectric*)
  0.00     74.89     0.00       27     0.00     0.00  void std::allocator_traits<std::allocator<dielectric> >::construct<dielectric, double>(std::allocator<dielectric>&, dielectric*, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     74.89     0.00       27     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<dielectric>)
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<double>(std::allocator<dielectric>, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00     74.89     0.00       27     0.00     0.00  std::shared_ptr<dielectric> std::make_shared<dielectric, double>(double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     74.89     0.00       27     0.00     0.00  std::shared_ptr<dielectric> std::allocate_shared<dielectric, std::allocator<dielectric>, double>(std::allocator<dielectric> const&, double&&)
  0.00     74.89     0.00       27     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<dielectric, std::allocator<dielectric>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     74.89     0.00       26     0.00     0.00  std::enable_if<std::is_assignable<std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&, std::shared_ptr<dielectric> >::value, std::shared_ptr<Material>&>::type std::shared_ptr<Material>::operator=<dielectric>(std::shared_ptr<dielectric>&&)
  0.00     74.89     0.00       26     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<dielectric, void>(std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00       26     0.00     0.00  std::enable_if<std::__sp_compatible_with<dielectric*, Material*>::value, std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>&>::type std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::operator=<dielectric>(std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     74.89     0.00       26     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       26     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       26     0.00     0.00  std::remove_reference<std::shared_ptr<dielectric>&>::type&& std::move<std::shared_ptr<dielectric>&>(std::shared_ptr<dielectric>&)
  0.00     74.89     0.00       26     0.00     0.00  std::remove_reference<std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2>&)
  0.00     74.89     0.00       24     0.00     0.00  bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00     74.89     0.00       24     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::size() const
  0.00     74.89     0.00       24     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()
  0.00     74.89     0.00       24     0.00     0.00  std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00     74.89     0.00       24     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00     74.89     0.00       24     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*)
  0.00     74.89     0.00       24     0.00     0.00  std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>()
  0.00     74.89     0.00       24     0.00     0.00  std::chrono::duration_values<long>::zero()
  0.00     74.89     0.00       24     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::operator-<long, std::ratio<1l, 1l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       24     0.00     0.00  std::thread::_State::_State()
  0.00     74.89     0.00       24     0.00     0.00  Color&& std::forward<Color>(std::remove_reference<Color>::type&)
  0.00     74.89     0.00       23     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++()
  0.00     74.89     0.00       23     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const
  0.00     74.89     0.00       23     0.00     0.00  std::_Head_base<0ul, std::thread::_State*, false>::_Head_base()
  0.00     74.89     0.00       23     0.00     0.00  std::_Head_base<1ul, std::default_delete<std::thread::_State>, true>::_Head_base()
  0.00     74.89     0.00       23     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*)
  0.00     74.89     0.00       23     0.00     0.00  std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*)
  0.00     74.89     0.00       23     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> > >::_State_impl<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       23     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::back()
  0.00     74.89     0.00       23     0.00     0.00  void std::_Destroy<std::thread>(std::thread*)
  0.00     74.89     0.00       22     0.00     0.00  void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::thread*, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     0.00  std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}, false>::_M_head(std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}, false>&)
  0.00     74.89     0.00       22     0.00     0.00  std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}, false>::_Head_base<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     0.00  std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>::_M_head(std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&)
  0.00     74.89     0.00       22     0.00     0.00  std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>::_Tuple_impl<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::allocator<std::thread>&, std::thread*, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     0.00  std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}, true, true>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     3.40  void std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
  0.00     74.89     0.00       22     0.00     0.00  std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> >::_Invoker<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     3.40  std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> >::operator()()
  0.00     74.89     0.00       22     0.00     0.00  std::thread::thread<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}, , void>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     0.00  std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     3.40  void std::__invoke_impl<void, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::__invoke_other, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       22     0.00     3.40  std::__invoke_result<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>::type std::__invoke<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00       21     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_get_Tp_allocator()
  0.00     74.89     0.00       21     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}& std::__get_helper<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&)
  0.00     74.89     0.00       21     0.00     0.00  std::tuple_element<0ul, std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> >::type&& std::get<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&&)
  0.00     74.89     0.00       21     0.00     0.00  std::remove_reference<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&>::type&& std::move<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&>(std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>&)
  0.00     74.89     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::__normal_iterator(std::shared_ptr<hittable>* const&)
  0.00     74.89     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::max_size() const
  0.00     74.89     0.00       20     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_get_Tp_allocator() const
  0.00     74.89     0.00       20     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00     74.89     0.00       20     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::max_size() const
  0.00     74.89     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::max_size(std::allocator<std::shared_ptr<hittable> > const&)
  0.00     74.89     0.00       20     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::zero()
  0.00     74.89     0.00       20     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_S_max_size(std::allocator<std::shared_ptr<hittable> > const&)
  0.00     74.89     0.00       20     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_S_relocate(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&)
  0.00     74.89     0.00       20     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_S_do_relocate(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&, std::integral_constant<bool, true>)
  0.00     74.89     0.00       20     0.00     0.00  std::shared_ptr<hittable>* std::__relocate_a<std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> > >(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&)
  0.00     74.89     0.00       20     0.00     0.00  std::shared_ptr<hittable>* std::__relocate_a_1<std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> > >(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&)
  0.00     74.89     0.00       19     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}> > >::~_State_impl()
  0.00     74.89     0.00       18     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::_M_max_size() const
  0.00     74.89     0.00       18     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       17     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       17     0.00     0.00  bool std::chrono::operator< <long, std::ratio<1l, 1l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       17     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     74.89     0.00       15     0.00     0.00  void std::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00     74.89     0.00       15     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00     74.89     0.00       15     0.00     0.00  std::shared_ptr<Lambertian>& std::forward<std::shared_ptr<Lambertian>&>(std::remove_reference<std::shared_ptr<Lambertian>&>::type&)
  0.00     74.89     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::max_size() const
  0.00     74.89     0.00       12     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const
  0.00     74.89     0.00       12     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::max_size() const
  0.00     74.89     0.00       12     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator()
  0.00     74.89     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&)
  0.00     74.89     0.00       12     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&)
  0.00     74.89     0.00       11     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_deallocate(std::shared_ptr<hittable>*, unsigned long)
  0.00     74.89     0.00       11     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00     74.89     0.00       11     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>)
  0.00     74.89     0.00       11     0.00     0.00  std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00     74.89     0.00       11     0.00     0.00  std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00     74.89     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::deallocate(std::shared_ptr<hittable>*, unsigned long)
  0.00     74.89     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::allocate(unsigned long, void const*)
  0.00     74.89     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >::difference_type __gnu_cxx::operator-<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >(__gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > > const&)
  0.00     74.89     0.00       10     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_check_len(unsigned long, char const*) const
  0.00     74.89     0.00       10     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_allocate(unsigned long)
  0.00     74.89     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::deallocate(std::allocator<std::shared_ptr<hittable> >&, std::shared_ptr<hittable>*, unsigned long)
  0.00     74.89     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<std::shared_ptr<hittable> > >::allocate(std::allocator<std::shared_ptr<hittable> >&, unsigned long)
  0.00     74.89     0.00       10     0.00     0.00  void std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_M_realloc_insert<std::shared_ptr<hittable> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<hittable>*, std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > > >, std::shared_ptr<hittable> const&)
  0.00     74.89     0.00       10     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::end()
  0.00     74.89     0.00       10     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::begin()
  0.00     74.89     0.00        9     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&& std::forward<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(std::remove_reference<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>::type&)
  0.00     74.89     0.00        8     0.00     0.00  std::shared_ptr<dielectric>& std::forward<std::shared_ptr<dielectric>&>(std::remove_reference<std::shared_ptr<dielectric>&>::type&)
  0.00     74.89     0.00        8     0.00     0.00  std::shared_ptr<Metal>& std::forward<std::shared_ptr<Metal>&>(std::remove_reference<std::shared_ptr<Metal>&>::type&)
  0.00     74.89     0.00        8     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00     74.89     0.00        7     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long)
  0.00     74.89     0.00        7     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::begin()
  0.00     74.89     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*)
  0.00     74.89     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00     74.89     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const
  0.00     74.89     0.00        6     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long)
  0.00     74.89     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long)
  0.00     74.89     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long)
  0.00     74.89     0.00        6     0.00     0.00  void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#2}&&)
  0.00     74.89     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long)
  0.00     74.89     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator()
  0.00     74.89     0.00        3     0.00     0.00  std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&)
  0.00     74.89     0.00        3     0.00     0.00  std::allocator<std::function<void ()>*>::~allocator()
  0.00     74.89     0.00        3     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long)
  0.00     74.89     0.00        2     0.00     0.00  cross(Vec3 const&, Vec3 const&)
  0.00     74.89     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<Lambertian>::construct<Lambertian, Color>(Lambertian*, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*)
  0.00     74.89     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::~new_allocator()
  0.00     74.89     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::_M_max_size() const
  0.00     74.89     0.00        2     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const
  0.00     74.89     0.00        2     0.00     0.00  std::shared_ptr<Lambertian>::shared_ptr<std::allocator<Lambertian>, Color>(std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::shared_ptr<Material>::shared_ptr<Lambertian, void>(std::shared_ptr<Lambertian> const&)
  0.00     74.89     0.00        2     0.00     0.00  std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Lambertian>, Color>(std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Lambertian, void>(std::__shared_ptr<Lambertian, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00        2     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Lambertian, std::allocator<Lambertian>, Color>(Lambertian*&, std::_Sp_alloc_shared_tag<std::allocator<Lambertian> >, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator()
  0.00     74.89     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<Lambertian> >::construct<Lambertian, Color>(std::allocator<Lambertian>&, Lambertian*, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long)
  0.00     74.89     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long)
  0.00     74.89     0.00        2     0.00     0.00  std::_Sp_counted_ptr_inplace<Lambertian, std::allocator<Lambertian>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Color>(std::allocator<Lambertian>, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::shared_ptr<Lambertian> std::make_shared<Lambertian, Color>(Color&&)
  0.00     74.89     0.00        2     0.00     0.00  std::shared_ptr<Lambertian> std::allocate_shared<Lambertian, std::allocator<Lambertian>, Color>(std::allocator<Lambertian> const&, Color&&)
  0.00     74.89     0.00        2     0.00     0.00  operator*(Vec3 const&, double)
  0.00     74.89     0.00        1     0.00     0.00  generate_ppm_6(char*)
  0.00     74.89     0.00        1     0.00     0.00  degrees_to_radians(double)
  0.00     74.89     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     74.89     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     74.89     0.00        1     0.00     0.00  MemoryPool::allocate(unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  MemoryPool::MemoryPool(unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  MemoryPool::~MemoryPool()
  0.00     74.89     0.00        1     0.00     0.00  ThreadPool::display_progress()
  0.00     74.89     0.00        1     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)
  0.00     74.89     0.00        1     0.00     0.00  ThreadPool::~ThreadPool()
  0.00     74.89     0.00        1     0.00     0.00  hittable_list::hittable_list()
  0.00     74.89     0.00        1     0.00     0.00  hittable_list::~hittable_list()
  0.00     74.89     0.00        1     0.00     0.00  Camera::initialize()
  0.00     74.89     0.00        1     0.00     0.01  Camera::render(hittable_list const&, char*)
  0.00     74.89     0.00        1     0.00     0.00  Camera::Camera(Vec3&, Vec3&, Vec3&, ThreadPool*)
  0.00     74.89     0.00        1     0.00     0.00  Camera::~Camera()
  0.00     74.89     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<Metal>::construct<Metal, Color, double>(Metal*, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::construct<sphere, Vec3, double, std::shared_ptr<Lambertian>&>(sphere*, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::construct<sphere, Vec3, double, std::shared_ptr<dielectric>&>(sphere*, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::construct<sphere, Vec3, double, std::shared_ptr<Metal>&>(sphere*, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<sphere>::construct<sphere, Vec3, int, std::shared_ptr<Lambertian>&>(sphere*, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<hittable> >::~new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::~new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::~new_allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::shared_ptr<hittable> >::allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::shared_ptr<hittable> >::~allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::thread>::allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::thread>::~allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::~allocator()
  0.00     74.89     0.00        1     0.00     0.00  std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}, false>::_M_head(std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}, false>&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Head_base<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}, false>::_Head_base<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<Metal>::shared_ptr<std::allocator<Metal>, Color, double>(std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere>::shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<dielectric>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.01  std::shared_ptr<sphere>::shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<Metal>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere>::shared_ptr<std::allocator<sphere>, Vec3, int, std::shared_ptr<Lambertian>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere>::shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<Lambertian>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<Material>::shared_ptr<dielectric, void>(std::shared_ptr<dielectric> const&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<Material>::shared_ptr<Metal, void>(std::shared_ptr<Metal> const&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data()
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base()
  0.00     74.89     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base()
  0.00     74.89     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>::_Tuple_impl<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::shared_ptr<hittable>*>(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_Vector_impl::_Vector_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_Vector_impl::~_Vector_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_Vector_impl_data::_Vector_impl_data()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::_Vector_base()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::~_Vector_base()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl_data::_Vector_impl_data()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base()
  0.00     74.89     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base()
  0.00     74.89     0.00        1     0.00     0.00  std::__mutex_base::__mutex_base()
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Metal>, Color, double>(std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<Lambertian>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<sphere>, Vec3, int, std::shared_ptr<Lambertian>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<sphere, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<sphere>, Vec3, double, std::shared_ptr<dielectric>&>(std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<dielectric, void>(std::__shared_ptr<dielectric, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_ptr<Material, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Metal, void>(std::__shared_ptr<Metal, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     74.89     0.00        1     0.00     0.00  std::__atomic_base<bool>::__atomic_base(bool)
  0.00     74.89     0.00        1     0.00     0.00  std::__atomic_base<bool>::operator=(bool)
  0.00     74.89     0.00        1     0.00     0.00  std::__atomic_base<int>::__atomic_base(int)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Metal, std::allocator<Metal>, Color, double>(Metal*&, std::_Sp_alloc_shared_tag<std::allocator<Metal> >, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<Lambertian>&>(sphere*&, std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<dielectric>&>(sphere*&, std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<sphere, std::allocator<sphere>, Vec3, int, std::shared_ptr<Lambertian>&>(sphere*&, std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<Metal>&>(sphere*&, std::_Sp_alloc_shared_tag<std::allocator<sphere> >, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<Metal> >::construct<Metal, Color, double>(std::allocator<Metal>&, Metal*, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::construct<sphere, Vec3, double, std::shared_ptr<Lambertian>&>(std::allocator<sphere>&, sphere*, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::construct<sphere, Vec3, double, std::shared_ptr<dielectric>&>(std::allocator<sphere>&, sphere*, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::construct<sphere, Vec3, double, std::shared_ptr<Metal>&>(std::allocator<sphere>&, sphere*, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<sphere> >::construct<sphere, Vec3, int, std::shared_ptr<Lambertian>&>(std::allocator<sphere>&, sphere*, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::condition_variable::wait<ThreadPool::wait_all()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::wait_all()::{lambda()#1})
  0.00     74.89     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Metal, std::allocator<Metal>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Color, double>(std::allocator<Metal>, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Vec3, double, std::shared_ptr<Lambertian>&>(std::allocator<sphere>, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Vec3, double, std::shared_ptr<Metal>&>(std::allocator<sphere>, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<sphere, std::allocator<sphere>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Vec3, double, std::shared_ptr<dielectric>&>(std::allocator<sphere>, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.00     74.89     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long)
  0.00     74.89     0.00        1     0.00     0.01  std::uniform_real_distribution<double>::uniform_real_distribution(double, double)
  0.00     74.89     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&)
  0.00     74.89     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool)
  0.00     74.89     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>)
  0.00     74.89     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque()
  0.00     74.89     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque()
  0.00     74.89     0.00        1     0.00     0.00  std::mutex::mutex()
  0.00     74.89     0.00        1     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>()
  0.00     74.89     0.00        1     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue()
  0.00     74.89     0.00        1     0.00     0.00  std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}, true, true>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::atomic<bool>::atomic(bool)
  0.00     74.89     0.00        1     0.00     0.00  std::atomic<bool>::operator=(bool)
  0.00     74.89     0.00        1     0.00     0.00  std::atomic<int>::atomic(int)
  0.00     74.89     0.00        1     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> > >::_State_impl<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> > >::~_State_impl()
  0.00     74.89     0.00        1     0.00     0.00  void std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
  0.00     74.89     0.00        1     0.00     0.00  std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> >::_Invoker<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::thread::_Invoker<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> >::operator()()
  0.00     74.89     0.00        1     0.00     0.00  std::thread::thread<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}, , void>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::thread::thread()
  0.00     74.89     0.00        1     0.00     0.00  std::thread::operator=(std::thread&&)
  0.00     74.89     0.00        1     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::vector()
  0.00     74.89     0.00        1     0.00     0.00  std::vector<std::shared_ptr<hittable>, std::allocator<std::shared_ptr<hittable> > >::~vector()
  0.00     74.89     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::vector()
  0.00     74.89     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::~vector()
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<Metal> std::make_shared<Metal, Color, double>(Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::make_shared<sphere, Vec3, double, std::shared_ptr<Lambertian>&>(Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::make_shared<sphere, Vec3, double, std::shared_ptr<dielectric>&>(Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.01  std::shared_ptr<sphere> std::make_shared<sphere, Vec3, double, std::shared_ptr<Metal>&>(Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::make_shared<sphere, Vec3, int, std::shared_ptr<Lambertian>&>(Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}& std::__get_helper<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(std::_Tuple_impl<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&)
  0.00     74.89     0.00        1     0.00     0.00  std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  void std::__invoke_impl<void, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(std::__invoke_other, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<Metal> std::allocate_shared<Metal, std::allocator<Metal>, Color, double>(std::allocator<Metal> const&, Color&&, double&&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::allocate_shared<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<Lambertian>&>(std::allocator<sphere> const&, Vec3&&, double&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::allocate_shared<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<dielectric>&>(std::allocator<sphere> const&, Vec3&&, double&&, std::shared_ptr<dielectric>&)
  0.00     74.89     0.00        1     0.00     0.01  std::shared_ptr<sphere> std::allocate_shared<sphere, std::allocator<sphere>, Vec3, double, std::shared_ptr<Metal>&>(std::allocator<sphere> const&, Vec3&&, double&&, std::shared_ptr<Metal>&)
  0.00     74.89     0.00        1     0.00     0.00  std::shared_ptr<sphere> std::allocate_shared<sphere, std::allocator<sphere>, Vec3, int, std::shared_ptr<Lambertian>&>(std::allocator<sphere> const&, Vec3&&, int&&, std::shared_ptr<Lambertian>&)
  0.00     74.89     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}> >::type&& std::get<0ul, ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&&)
  0.00     74.89     0.00        1     0.00     0.00  std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00     74.89     0.00        1     0.00     0.00  std::remove_reference<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&>::type&& std::move<std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&>(std::tuple<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::shared_ptr<hittable>*>(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::shared_ptr<hittable>*, std::shared_ptr<hittable> >(std::shared_ptr<hittable>*, std::shared_ptr<hittable>*, std::allocator<std::shared_ptr<hittable> >&)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::thread*>(std::thread*, std::thread*)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00     74.89     0.00        1     0.00     0.00  void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&)
  0.00     74.89     0.00        1     0.00     0.00  std::__invoke_result<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>::type std::__invoke<ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}>(ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}&&)
  0.00     74.89     0.00        1     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00     74.89     0.00        1     0.00     0.00  ThreadPool::ThreadPool(unsigned long, bool)::{lambda()#1}::operator()() const
